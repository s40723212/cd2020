var tipuesearch = {"pages": [{'title': 'weeks', 'text': 'week1-5 \n week6-10 \n', 'tags': '', 'url': 'weeks.html'}, {'title': 'week1-5', 'text': 'week1 \n 1.新建個人倉儲 \n 2.使用git submodule add  https://github.com/mdecourse/cmsimde.git\xa0 導入個人倉儲 \n 3.將cmsimde中up dir資料夾內的資料複製進個人倉儲資料夾中 \n 4.提交推送至github \n 5.完成 \n . \n week2 \n 亂數分組必須注意下列事項  \n 1.注意資料來源是否為https，否則將無法成功亂數分組 \n  2.所有資料來源都來自http，也就是說輸出URL都在http，記得更改不要只有更改Dart的URL  \n 3.乙班名單 https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0780  \xa0 \xa0 \xa0 \xa0 \xa0  \xa0https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0780', 'tags': '', 'url': 'week1-5.html'}, {'title': 'notes', 'text': 'About Dart \n About Class \n', 'tags': '', 'url': 'notes.html'}, {'title': 'Dart', 'text': '\n 常見的code editor有 Visual Studio code ,\xa0 IntelliJ ,和 Android Studio code \n These code editors are known as IDE(intergrated development environment). They have lots of feature that make writting code easy and efficient. In other words, they are design to make your coding life easier. \n', 'tags': '', 'url': 'Dart.html'}, {'title': 'IDE(intergrated development environment)', 'text': '\n \n \n 以前的程式開發撰寫，一直到程式真正可用需要很多的軟體工具協助，例如撰寫程式碼需要一套類似文書處理器的軟體，我們稱編輯器（Editor）；程式寫好後需要編譯，就再需要一個編譯器（Compiler）；寫完的程式可能有一部分要跟其他程式連結在一起，又需要一個連結器（Linker）；這些都有了後，程式可能有錯誤，還需要除錯，就需要除錯器（Debugger）。 \n 這一堆「器」，其實都是為了開發程式而存在的工具性軟體，是各自獨立、散落的，但因為每個都會用到，乾脆推出一個程式開發軟體，把上面這一堆「器」的功能一次都備齊了，這樣，在同一個程式操作畫面中，既可以編輯程式碼文字，也可以編譯、連結、除錯等，因為把原本各自散落的程式開發工具統整在一起，稱為整合（Integrated，大陸稱為：集成）。 \n 簡單來說，合併Editor, Comploer, linker, Debugger工具軟體等功能稱為IDE (intergrated development environment) \n \n https://makerpro.cc/2015/08/what-is-ide/ \n \n \n \n', 'tags': '', 'url': 'IDE(intergrated development environment).html'}, {'title': 'Class', 'text': '', 'tags': '', 'url': 'Class.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};